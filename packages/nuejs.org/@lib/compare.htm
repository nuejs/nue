

<dialog @name="compare" id="compare" class="compare" popover>
  <header class="flex">
    <h2>{ step.title }</h2>
    <nav class="flex">
      <button class="action" @click="prev"><img src="/icon/chevron-left.svg"></button>
      <button class="action" @click="next"><img src="/icon/chevron-right.svg"></button>
      <button class="action" popovertarget="compare"><img src="/icon/close.svg"></button>
    </nav>
  </header>

  <div class="stack { seeking: seeking }">
    <div>
      <h3 class="flex">
        <b>Tailwind/Next.js:</b>
        <span>JS monolith</span>
        <a target="_new" :href="step.tw_url" class="github">{ step.src[0] }</a>
      </h3>
      <figure>
        <a target="_new" :href="step.tw_url"><img src="/img/{ step.img[0] }.png"></a>
      </figure>
    </div>

    <div>
      <h3 class="flex">
        <b>Nue:</b>
        <span>{ step.desc }</span>
        <a target="_new"  :href="step.nue_url" class="github">{ step.src[1] }</a>
      </h3>
      <figure>
        <a target="_new" :href="step.nue_url"><img src="/img/{ step.img[1] }.png"></a>
      </figure>
    </div>
  </div>

  <script>
    index = 0

    constructor({ compare }) {
      const [ tw_base, nue_base ] = compare.baseurls

      this.steps = compare.steps.map(step => {
        step.tw_url = tw_base + '/' + step.src[0]
        step.nue_url = `${nue_base}/${step.src[1]}?plain=1`
        return step
      })

      this.seek(0)
    }

    seek(i) {
      this.step = this.steps[i]
      this.index = i
      this.seeking = true
      setTimeout(() => { this.update({ seeking: false }) }, 200)
    }

    prev() {
      let i = --this.index
      if (i < 0) i = this.steps.length -1
      this.seek(i)
    }

    next() {
      let i = ++this.index
      if (i == this.steps.length) i = 0
      this.seek(i)
    }

  </script>
</dialog>